%     MATLAB VERSION OF 2/27/93
%     PERFORMS THE LEAST SQUARES FIT

      function [calc,pa,pasig,chsq,err,grad,alphin] = nllsq1(m1,m2,m3,...
        m4,obs,osig,pa,paf,dbug,marq,delchi,delgrad,iter);
%      for i1=1:length(pa);
%      fprintf('PA %g, %g\n',i1,pa(i1)), end,

% REQUIRED THE ADDITIONAL FUNCTIONS:
%       MODEL, DER, CHISQ, INVERT1, STATIST
%       NLLPT2, NLLPT3, INVPT2

%      VARIABLES USED IN PROGRAM
% M1,M2,M3,M4, ARE USED TO DEFINE THE MODEL OF THE OBSERVABLE,
%  CORRESPONDING TO M1
% OBS    ARRAY OF OBSERVED FUNCTION VALUES
% OSIG   UNCERTAINTIES OF OBSERVABLES
% CALC   ARRAY OF CALCULATED FUNCT. VALUES
% PA     ARRAY OF FITTING PARAMETERS PAF FITTING FLAGS;=0 FOR
%    PARAMETERS HELD CONSTANT,  =1 FOR FITTED PARAMETERS
% PASIG  ARRAY THAT RETURNS UNCERTAINTIES IN PARAMETERS
% MARQ   MARQUARD PARAMETER; LARGE VALUE INDICATES STEEPEST DESCENT STEP,
%    SMALL VALUE NEWTON (LINEARIZED CHISQ) STEP. SHOULD BE SET TO 0.001
%    INITIALLY
% CHSQ   CHI**2 OF FIT
% DELCHI IF TWO SUCCESIVE CHSQ AGREE WITHIN DELCHI, THE FIT IS TERMINATED
% DELGRAD IF THE GRADIENT OF CHSQ FALLS BELOW DELGRAD, THE FIT IS TERMINATED
% ERR    ERROR CODE;SHOULD BE SET TO ZERO INITIALLY.
% ERR=1: NO PARAMETERS FITTED;ONLY CHSQ IS RETURNED
% ERR=2: MORE PARAMETERS THAN OBSERVABLES FITTED
% ERR=3: MATRIX INVERSION FAILED;JACOBIAN SINGULAR
% ERR=4: RECOVERY FROM SINGULAR JACOBIAN FAILED
% ERR=5: NUMBER OF ITERATIONS IN ITER EXCEEDED
% ERR=6: MARQ EXCEEDED 10**10; SSQ CANNOT BE MINIMIZED BECAUSE
%    GRADIENTS TO STEEP OR DELCHI SET UNREALISTICALLY SMALL
% ERR=7: CAL WAS UNABLE TO COMPUTE ONE OF THE OBSERVABLES
% ERR=8: MATRIX INVERSION TO COMPUTE UNCERT. FAILED
% ITER   MAXIMUM NUMBER OF ITERATIONS(CALLS OF DERIVATIVE)

% THE FOLLOWING PARAMETERS MUST NOT BE SET TO ANYTHING INITIALLY,
% BUT ARE USEFUL FOR DEBUGGING OR ADDITIONAL INFORMATION ABOUT
% THE FIT; DIMENSIONING IS AS FOR OBS AND PA
% X  ARRAY OF THOSE PA WHICH ARE FITTED
% GRAD   NORM OF THE GRADIENT OF CHSQ;SHOULD BE CLOSE TO
%    ZERO NEAR THE MINIMUM
% NEXTX  ARRAY OF FITTING PARAMETERS BEFORE TESTING FOR
%    ITS VIABILITY IN DECREASING CHSQ
% ALPHA  MATRIX THAT CONTAINS THE JACOBIAN TRANSPOSE TIMES
%    THE JACOBIAN
% BETA   GRADIENT OF SSQ
% DERIV  MATRIX OF DERIVATIVES OF ALL OBS W/R TO ALL PARAMETERS


% DETERMINE CONSTANTS TO BE FIT AND THEIR NUMBER
  icount=0;  ograd=0;  xnum=0;
  for i1=1:length(pa);
   if paf(i1)~= 0; xnum=xnum+1; xpos(xnum)=i1; x(xnum)=pa(i1); end;
  end

% CALCULATE WEIGHTS
   weight = 1../(osig.*osig);

% if no parameters are to be fit output chsq, and calc
  if xnum == 0
    [chsq,calc,pa]= chisq(m1,m2,m3,m4,obs,weight,pa,x,xpos);
    err=1; return;
  end

% EVALUATE DEGREES OF FREEDOM. STOP IF THERE ISN'T ENOUGH DATA
   if (length(obs)-xnum < 1 ), err=2; return, end;

% EVALUATE INITIAL CHSQ; NOTE THAT THIS ALSO CALCULATES
% CALC FOR THE PARAMETER SET X
   [chold,calc,pa]= chisq(m1,m2,m3,m4,obs,weight,pa,x,xpos);
%        fprintf('CHOLD %g\n',chold)

   [calc,ocalc,pa,pasig,x,nextx,chsq,chold,err,...
     grad,ograd,alpha,alphin,icount,beta,deriv,det,marq]=...
     nllpt2(m1,m2,m3,m4,calc,ocalc,pa,pasig,paf,x,xpos,nextx,...
     chsq,chold,err,grad,ograd,alpha,alphin,icount,iter,...
     beta,deriv,det,dbug,marq,delchi,delgrad,obs,weight);
%     fprintf('\nICOUNT= %g',icount)
