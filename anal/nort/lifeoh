#! /usr/local/bin/perl

#__USAGE
#%C <directory>
#	The directory is where lifediff.sps is located.
#	A set of times may be specified optionally in a file
#	named lifetimes in the same directory with lifediff.sps.
#	The optional times allow the run to be broken up into
#	several parts in order to discern a trend in the lifetime.
#	If times are specified, the results are written to
#	lifeOH<n>.sps, otherwise lifeOH.sps
#	The summary of Tau values should be written to a file.

if ( $0 =~ m|^(.*)/[^/]*$| ) {
  $sdir = $1;
} else {
  $sdir = `pwd`; chop $sdir;
}

my $dir;
if ($#ARGV >= 0 ) {
  $dir = $ARGV[0]; shift(@ARGV);
  chdir $dir || die "Unable to chdir $dir: ";
} else { $dir = "."; }

{
  my $sfile="$sdir/lifeoh2.inp";
  -f $sfile || die "Source file $sfile not found\n";
}

-f "lifediff.sps" ||
  die "Input spreadsheet lifediff.sps not found\n";


sub lifewindow {
  my ( $i, $from, $to ) = @_;

  my $range = defined( $i ) ? " $i $from $to" : "" ;
  $i = "" unless defined( $i );

  unlink( "lifeOH$i.sps", "lifeOHtmp$i.sps" );
  system("snafu -b2$sdir/lifeoh2.inp $range") &&
	die "lifeoh2.inp failed\n";

  unlink( "lifeOHtmp$i.sps" );
}

my @TIMES;
if ( open( REG, "<lifetimes" ) ) {
  while (<REG>) {
	chop;
	$TIMES[$#TIMES+1] = $_;
  }
  close(REG);
}

if ( $#TIMES >= 0 ) {
  my ( $i, $from, $to, @Tau, @sigTau, @dTau );
  for ($i = 0; $i < $#TIMES; $i++ ) {
	lifewindow( $i, $TIMES[$i], $TIMES[$i+1] );
  }
#   lifewindow( $i, $TIMES[$i], "48:00:00" );
#   for ( $i = 0; $i <= $#Tau; $i++ ) {
# 	printf OUT "$TIMES[$i] %.3f %.3f %.3f\n",
# 	  $Tau[$i], $sigTau[$i], $dTau[$i];
#   }
} else {
  lifewindow();
}

system( "cat lifeOH.tau" );
  
open( PLOT, ">lifeOH.rtg" ) || die "Unable to open lifeOH.rtg";
print PLOT "PO RP \"\"\nPC APC lifeOH.rtg\nPA\n";
for ( my $i = -1; $i <= $#TIMES; $i++ ) {
  $j = $i >= 0 ? $i : "";
  -r "lifeOH$j.sps" &&
	print PLOT "CC sps lifeOH$j\n";
}
print PLOT "CW lifeOH\n";
print PLOT "CA X X/Gt2BDly/1\nEA\n";
for ( my $i = -1; $i <= $#TIMES; $i++ ) {
  $j = $i >= 0 ? $i : "";
  $k = $i >= 0 ? $i : "all";
  if ( -r "lifeOH$j.sps" ) {
	print PLOT "CA Y Y/OHLife/$k\nEA\n";
	print PLOT "CG Life/$k OHLife/lifeOH$j.sps ";
	print PLOT "X/Gt2BDly/1 Y/OHLife/$k\n";
	#graph properties: line width 0, symbol +, symbol color red
	print PLOT "PO GP Life/$k\n";
	print PLOT "PC APC 14\n";
	print PLOT "PC APS \"+\"\n";
	print PLOT "PC APt 0\n";
	print PLOT "PA\nEG\n";
	print PLOT "CG Curve/$k OHCurve/lifeOH$j.sps ";
	print PLOT "X/Gt2BDly/1 Y/OHLife/$k\n";
	# graph props: line width 2, color blue (15)
	print PLOT "PO GP Curve/$k\n";
	print PLOT "PC APc 15\n";
	print PLOT "PC APt 2\n";
	print PLOT "PA\nEG\n";
  }
}
print PLOT "EW\n";
close(PLOT);
if ( -e "/D16/win1" || -e "/dev/win1" ) {
  my $pwd = `pwd`; chop $pwd;
  system( "on -t /dev/con1 /windows/apps/rtg/rtg -n -f $pwd/lifeOH.rtg" );
}
