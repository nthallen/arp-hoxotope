%{
  /* GtCt1Stat:
	   D0:  Trigger Counter Overflow
	   D1:  Counter 1N Overflow
	   D2:  Counter 1A Overflow
	   D3:  Counter 1B Overflow
	   D4:  Counter 2N Overflow
	   D5:  Counter 2A Overflow
	   D6:  Counter 2B Overflow
	   D7:  Spare
	   D8-11: R/W Integration period select
	   D12: Counter 1N Config
	   D13: Counter 2N Config
	   D14: L2Stat (True if latched twice before reading)
	   D15: Resynch (True if a resynch occurred since last status 
					 read)
  */
  #define GtCt24_32(x) ((((unsigned long)x.high)<<16)+x.low)
%}
TM typedef unsigned short NGtCt16 {
  text "%5u";
  collect x = sbwa(x.address);
}
TM typedef NGtCt16 GtCt16;

TM typedef unsigned long NGtCt32 { text "%6lu"; }
TM typedef struct {
  unsigned short low;
  unsigned char high;
} NGtCt24 {	collect x {
			  x.low = sbwa(x.address);
			  x.high = sbba(x.address+2);
			}
			text "%6lu";
			convert NGtCt32 GtCt24_32();
		  }

TM 4 Hz NGtCt16 GtCt1Stat; Address GtCt1Stat 0x600;
TM 4 Hz GtCt16 SX1AG; Address SX1AG 0x614;
TM 4 Hz GtCt16 SX1FG; Address SX1FG 0x616;
TM 4 Hz NGtCt24 SX1NG; Address SX1NG 0x610;
TM 4 Hz GtCt16 SX2AG; Address SX2AG 0x61C;
TM 4 Hz GtCt16 SX2FG; Address SX2FG 0x61E;
TM 4 Hz NGtCt24 SX2NG; Address SX2NG 0x618;
TM 4 Hz NGtCt16 RepRate1; Address RepRate1 0x608;
Group GtCt1 ( GtCt1Stat, SX1AG, SX1FG, SX1NG,
			SX2AG, SX2FG, SX2NG, RepRate1 ) {
  GtCt1Stat = sbwa( GtCt1Stat.address);
  SX1AG = sbwa( SX1AG.address);
  SX1FG = sbwa( SX1FG.address);
  SX1NG.low = sbwa( SX1NG.address);
  SX1NG.high = sbba( SX1NG.address + 2);
  SX2AG = sbwa( SX2AG.address);
  SX2FG = sbwa( SX2FG.address);
  SX2NG.low = sbwa( SX2NG.address);
  SX2NG.high = sbba( SX2NG.address + 2 );
  RepRate1 = sbwa( RepRate1.address);
}
TM typedef unsigned char GTDLY { text "%3u"; }
TM typedef unsigned char GTWID { text "%3u"; }
TM 1/4 Hz GTDLY Gt1ADly, Gt1BDly;
TM 1/4 Hz GTWID Gt1AWid, Gt1BWid;
Group GtCt1Gt ( Gt1ADly, Gt1AWid, Gt1BDly, Gt1BWid ) {
  unsigned short word;
  
  word = sbwa( 0x604 );
  Gt1AWid = word & 0xFF;
  Gt1ADly = ( word >> 8 ) & 0xFF;
  word = sbwa( 0x606 );
  Gt1BWid = word & 0xFF;
  Gt1BDly = ( word >> 8 ) & 0xFF;
}


TM 4 Hz NGtCt16 GtCt2Stat; Address GtCt2Stat 0x640;
TM 4 Hz GtCt16 SOCAG; Address SOCAG 0x654;
TM 4 Hz GtCt16 SOCFG; Address SOCFG 0x656;
TM 4 Hz NGtCt24 SOCNG; Address SOCNG 0x650;
TM 4 Hz GtCt16 LABAG; Address LABAG 0x65C;
TM 4 Hz GtCt16 LABFG; Address LABFG 0x65E;
TM 4 Hz NGtCt24 LABNG; Address LABNG 0x658;
TM 4 Hz NGtCt16 RepRate2; Address RepRate2 0x648;
Group GtCt2 ( GtCt2Stat, SOCAG, SOCFG, SOCNG,
			LABAG, LABFG, LABNG, RepRate2 ) {
  GtCt2Stat = sbwa( GtCt2Stat.address);
  SOCAG = sbwa( SOCAG.address);
  SOCFG = sbwa( SOCFG.address);
  SOCNG.low = sbwa( SOCNG.address);
  SOCNG.high = sbba( SOCNG.address + 2);
  LABAG = sbwa( LABAG.address);
  LABFG = sbwa( LABFG.address);
  LABNG.low = sbwa( LABNG.address);
  LABNG.high = sbba( LABNG.address + 2);
  RepRate2 = sbwa( RepRate2.address);
}
TM 1/4 Hz GTDLY Gt2ADly, Gt2BDly;
TM 1/4 Hz GTWID Gt2AWid, Gt2BWid;
Group GtCt2Gt ( Gt2ADly, Gt2AWid, Gt2BDly, Gt2BWid ) {
  unsigned short word;
  
  word = sbwa( 0x644 );
  Gt2AWid = word & 0xFF;
  Gt2ADly = ( word >> 8 ) & 0xFF;
  word = sbwa( 0x646 );
  Gt2BWid = word & 0xFF;
  Gt2BDly = ( word >> 8 ) & 0xFF;
}
