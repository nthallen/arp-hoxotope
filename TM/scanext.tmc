%{ /* lwext.tmc sample scan extraction routine
    * Must be linked with seq_ss.c
    */
  #include <stdlib.h>
  #include "ssp.h"
  #include "seq_ss.h"
  #include "tmctime.h"

  #define Ct24_Long(x) (0xFFFFFF & *(TMLONG *)&x)
  #define Ct24_Double(x) (double)Ct24_Long(x)
  #define To_Double(x) (double)(x)
  #define EXTRACTION_INIT initialize()
  #define EXTRACTION_TERM terminate()
  #define ALL_SPSS

  static double ext_delta = 0.;

  void initialize(void) {
	{
	  char *s;
	  s = getenv("EXT_DELTA");
	  if (s != NULL) {
		ext_delta=atof(s);
		msg(MSG, "Using Time Delta of %lf", ext_delta);
	  }
	}
  }
  void terminate(void) {
	close_seq_ss(1);
  }
%}

depending on (scanning_etn once) {
  sps_ptr seq_ss;
  if ((seq_ss = open_seq_ss("lw", 15)) >= 0) {
	ss_set_column(seq_ss, 0, "%14.11lt", "Time");
	ss_set_column(seq_ss, 1, "%5.0lf", "SX1AG");
	ss_set_column(seq_ss, 2, "%5.0lf", "Et_LW");
	ss_set_column(seq_ss, 3, "%5.0lf", "SOCFG");
	ss_set_column(seq_ss, 4, "%4.2lf", "OClUV");
	ss_set_column(seq_ss, 5, "%5.0lf", "EtnPs");
	ss_set_column(seq_ss, 6, "%5.0lf", "SX2AG");
	ss_set_column(seq_ss, 7, "%6.4lf", "UVMon");
	ss_set_column(seq_ss, 8, "%6.4lf", "X1Las");
	ss_set_column(seq_ss, 9, "%6.0lf", "EtPos");
  }
}
depending on (scanning_etn) {
  double ins_time;
  
  ins_time = dtime()+ext_delta;
  store_seq_ss(ins_time, 1, To_Double( SX1AG));
  store_seq_ss(ins_time, 2, To_Double( Et_LW));
  store_seq_ss(ins_time, 3, convert( SOCFG));
  store_seq_ss(ins_time, 4, convert( OClUV));
  store_seq_ss(ins_time, 5, To_Double( EtnPs));
  store_seq_ss(ins_time, 6, To_Double( SX2AG));
  store_seq_ss(ins_time, 7, convert( UVMon));
  store_seq_ss(ins_time, 8, convert( X1Las));
  store_seq_ss(ins_time, 9, EtPos );

}
depending on (not_scanning_etn once) {
  close_seq_ss(1);
}
