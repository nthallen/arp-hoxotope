%{
  char *IxDrive_text[] = {
	"  <  ",
	"| <  ",
	"  < |",
	"| < |",
	"  >  ",
	"| >  ",
	"  > |",
	"| > |",
	"<----",  /* driving in */
	"|<---",  /* driving in against in limit */
	"<---|",  /* driving in from out limit */
	"|<--|",  /* driving in both limits. Broke */
	"---->",  /* driving out */
	"|--->",  /* driving out from in limit */
	"--->|",  /* driving out agains out limit */
	"|-->|"   /* driving out both limits. Broke */
  };
%}
TM typedef unsigned char IxDriveStat { text "%5d" IxDrive_text[]; }
IxDriveStat BlwStFlag; invalidate BlwStFlag; { BlwStFlag = BlwSt & 0xF; Validate BlwStFlag; }
IxDriveStat EtnStFlag; invalidate EtnStFlag; { EtnStFlag = EtnSt & 0xF; Validate EtnStFlag; }
IxDriveStat AtnStFlag; invalidate AtnStFlag; { AtnStFlag = AtnSt & 0xF; Validate AtnStFlag; }
IxDriveStat PDVStatFlag; invalidate PDVStatFlag; { PDVStatFlag = PDVStat & 0xF; Validate PDVStatFlag; }
IxDriveStat PVStatFlag; invalidate PVStatFlag; { PVStatFlag = PVStat & 0xF; Validate PVStatFlag; }
%{
  char *IdxFlgTxt[8] = {
	"    ",
	"Scan",
	"On  ",
	"S/On",
	"Off ",
	"S/Of",
	"Alt ",
	"S/Al"
  };
%}
TM typedef unsigned short IndxrFlag {
  text "%4d" IdxFlgTxt[];
}

IndxrFlag ID0Flg; invalidate ID0Flg;
{ ID0Flg = ( IXStt ) & 1; validate ID0Flg; }
IndxrFlag EtnFlg; invalidate EtnFlg;
{ EtnFlg = ( IXStt >> 1 ) & 7; validate EtnFlg; }
IndxrFlag AtnFlg; invalidate AtnFlg;
{ AtnFlg = ( IXStt >> 4 ) & 7; validate AtnFlg; }
IndxrFlag PDVScan; invalidate PDVScan;
{ PDVScan = ( IXStt >> 7 ) & 1; validate PDVScan; }
IndxrFlag PVScan; invalidate PVScan;
{ PVScan = ( IXStt >> 8 ) & 1; validate PVScan; }
