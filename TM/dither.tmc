%{
  #include "nortlib.h"
  static unsigned long old_mean, new_mean;
  static unsigned short old_pos, old_count, new_pos, new_count, PrevPos;
  static int last_drive_out;
%}

state (etn_is_offline, etn_is_online);
validate etn_is_offline;

{
  unsigned short This_stat;
  This_stat = IxStt & (ETN_CHOP_BIT|ETN_SUPP_BIT);
  depending on (etn_is_offline) {
	if (This_stat == ETN_CHOP_BIT)
	  validate etn_is_online;
  } else if (This_stat != ETN_CHOP_BIT)
	validate etn_is_offline;
}

depending on (etn_is_offline once) {
  if (new_count > 0) {
	int drive_out;

	new_mean /= new_count;
	if (old_count > 0 && new_pos != old_pos) {
	  drive_out = new_pos > old_pos;
	  if (new_mean <= old_mean) drive_out = !drive_out;
	} else drive_out = !last_drive_out;
	last_drive_out = drive_out;
	if (drive_out) ci_sendcmd("OH Move Etalon Online Position Out\n", 2);
	else ci_sendcmd("OH Move Etalon Online Position In\n", 2);
	old_count = new_count;
	old_pos = new_pos;
	old_mean = new_mean;
	new_mean = 0;
	new_count = 0;
  }
}

depending on (etn_is_online, Ratio once) {
  if (EtnPs != PrevPos) PrevPos = EtnPs;
  else {
	if (EtnPs != new_pos) {
	  new_pos = EtnPs;
	  new_mean = 0;
	  new_count = 0;
	}
	new_mean += Ratio;
	new_count++;
  }
}
