%{
  /* h2ocol.tmc STRAT Collection for Water Vapor through ICC
   * $Log$
   * Revision 1.1  1997/02/25 19:07:05  nort
   * Initial revision
   *
   */
  #include <errno.h>
  #include <sys/types.h>
  #include <sys/proxy.h>
  #include <sys/irqinfo.h>
  #include "subbus.h"
  #include "timerbd.h"
  #include "intserv.h"

  pid_t onint_proxy;
  static int onint_iid;
  extern pid_t far onint_handler(void);
  
  #define H2O_PROXY 247
  #define H2O_EIR 4
  static int ints_set = 0; /* 1 == timerbd, 2 == intserv, 3 == hint */
  
  static void h2o_int_init( void ) {
	int resp;
	resp = set_response(NLRSP_QUIET);
	if (find_Tmr()!=-1) {
	  set_response(resp);
	  if (!ints_set) {
		EIR_proxy(H2O_EIR, H2O_PROXY);
		ints_set = 1;
	  }
	} else {
	  char onint_msg = H2O_PROXY;
	  onint_proxy = nl_make_proxy(&onint_msg, 1);
	  if ( IntSrv_IRQ_attach( "H2O",
				ISRV_IRQ_SPARE, onint_proxy ) == 0 ) {
		ints_set = 2;
	  } else if ( errno != ESRCH ) {
		msg(MSG_EXIT_ABNORM, "Error from intserv: %s",
		  strerror(errno) );
	  } else {
		msg(MSG,"Using IRQ 9 instead of timer board interrupt");
		onint_iid = qnx_hint_attach(9, onint_handler, FP_SEG(&onint_proxy));
		if (onint_iid == -1)
			msg(MSG_EXIT_ABNORM, "Error attaching interrupt for onint");
		ints_set = 3;
	  }
	  set_response(resp);
	}
	sbwa(0x690);
  }
  
  static void h2o_int_term( void ) {
	switch ( ints_set ) {
	  case 1: /* timerbd */
		EIR_reset(H2O_EIR);
		break;
	  case 2: /* intserv */
		IntSrv_IRQ_detach( "H2O", ISRV_IRQ_SPARE );
		qnx_proxy_detach(onint_proxy);
		break;
	  case 3: /* qnx_hint_attach */
		qnx_hint_detach(onint_iid);
		qnx_proxy_detach(onint_proxy);
		break;
	  default:
		break;
	}
	ints_set = 0;
  }

  #define COL_H2O_CTRS \
	WVAD1 = sbwa(0x698 /*  WVAD1.address */);\
	WVAD2 = sbwa(0x69A /* WVAD2.address */);\
	WVFlr.low = sbwa(0x690 /* WVFlr.address */);\
	WVFlr.high = sbba(0x692 /* WVFlr.address+2 */)

  #define ONINT_INIT h2o_int_init();
  #define ONINT_TERM h2o_int_term();
  #define DG_OTHER_CASES  case H2O_PROXY: COL_H2O_CTRS; break;

  static unsigned char far *H2O_SolSt = &nullregion;

%}

TM "pointer" H2O_SolSt 5; /* DCT_SOLDRV_B */

collect WVSSt = *H2O_SolSt;
